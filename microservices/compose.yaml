version: "3.8"

volumes:
  rabbitmq_data:
  pgdata: 

networks:
  kong-net:
    driver: bridge
    name: kong-net

services:
 
  ###################################
  # Activity Log: The Activity Log microservice
  ###################################
  activity_log:
    build:
      context: ./
      dockerfile: activity_log.Dockerfile
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      al_queue_make_split_payment_request: Activity_Log
      PYTHONUNBUFFERED: 1
 
  #######################################################
  # Bank accounts: The Bank accounts microservice
  #######################################################
  bank_accounts:
    build:
      context: ./
      dockerfile: bank_accounts.Dockerfile
    restart: always
    environment:
      dbURL: postgresql://default:a9NucShgs4vC@ep-bold-band-a1oubdjz-pooler.ap-southeast-1.aws.neon.tech/verceldb
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"

  #######################################################
  # error: The error microservice
  #######################################################
  error:
    build:
      context: ./
      dockerfile: error.Dockerfile
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      e_queue_make_split_payment_request: Error
      PYTHONUNBUFFERED: 1
  
  #######################################################
  # notification: The notification microservice
  #######################################################
  notification:
    build:
      context: ./
      dockerfile: notification.Dockerfile
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      n_queue_make_split_payment_request: Notification
      PYTHONUNBUFFERED: 1

  #######################################################
  # transaction_history: The transaction_history microservice
  #######################################################
  transaction_history:
    build:
      context: ./
      dockerfile: transaction_history.Dockerfile
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      dbURL: postgresql://default:BznZuKX3W9LQ@ep-soft-heart-a1pdoa7y-pooler.ap-southeast-1.aws.neon.tech/verceldb
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"
  
  #######################################################
  # transfer_funds: The transfer_funds microservice
  #######################################################
  transfer_funds:
    build:
      context: ./
      dockerfile: transfer_funds.Dockerfile
    restart: always
    depends_on:
      - bank_accounts
      - user_accounts
      - transaction_history
      - activity_log
      - notification
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      user_accounts_URL : http://user_accounts:5000/user_accounts
      bank_accounts_URL : http://bank_accounts:5001/bank_accounts
      transaction_history_URL : http://transaction_history:5002/transaction_history
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  #######################################################
  # user_accounts: The user_accounts microservice
  #######################################################
  user_accounts:
    build:
      context: ./
      dockerfile: user_accounts.Dockerfile
    restart: always
    environment:
      dbURL: postgresql://default:vHFyts8wa4PK@ep-shiny-wave-a4w35od7-pooler.us-east-1.aws.neon.tech/verceldb
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"

  #######################################################
  # user_goal: The user_goal microservice
  #######################################################
  user_goal:
    build:
      context: ./
      dockerfile: user_goal.Dockerfile
    restart: always
    environment:
      dbURL: postgresql://default:vHFyts8wa4PK@ep-shiny-wave-a4w35od7-pooler.us-east-1.aws.neon.tech/verceldb
      PYTHONUNBUFFERED: 1
    ports:
      - "5006:5006"

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostmake_split_payment_request: esd-rabbit  # Corrected from 'hostnotification' to 'hostmake_split_payment_request'
    restart: always
    ports:
      - "5672:5672"
      # Uncomment the following line if you need to access the RabbitMQ management interface from your host machine
      - "15672:15672"
    volumes: 
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
      - rabbitmq_data:/var/lib/rabbitmq 

#######################################################
  # make_split_payment_request: The make_split_payment_request microservice
  #######################################################
  make_split_payment_request:
    build:
      context: ./
      dockerfile: make_split_payment_request.Dockerfile
    restart: always
    depends_on:
      - group_details
      - activity_log
      - error
      - notification
      - rabbitmq
    environment:
      dbURL: postgresql://default:vHFyts8wa4PK@ep-shiny-wave-a4w35od7-pooler.us-east-1.aws.neon.tech/verceldb
      rabbit_host: rabbitmq
      rabbit_port: 5672
      group_details_URL : http://group_details:5010/group_details
      PYTHONUNBUFFERED: 1
    ports:
      - "5300:5300"

#######################################################
  # handle_split_reply: The handle_split_reply microservice
  #######################################################
  handle_split_reply:
    build:
      context: ./
      dockerfile: handle_split_reply.Dockerfile
    restart: always
    depends_on:
      - group_details
      - transfer_funds
      - activity_log
      - error
      - notification
      - rabbitmq
    environment:
      dbURL: postgresql://default:vHFyts8wa4PK@ep-shiny-wave-a4w35od7-pooler.us-east-1.aws.neon.tech/verceldb
      rabbit_host: rabbitmq
      rabbit_port: 5672
      transfer_funds_URL : http://transfer_funds:5100/transfer_funds
      group_details_URL : http://group_details:5010/group_details
      PYTHONUNBUFFERED: 1
    ports:
      - "5400:5400"

#######################################################
  # create_group: The create_group microservice
  #######################################################
  create_group:
    build:
      context: ./
      dockerfile: create_group.Dockerfile
    restart: always
    depends_on:
      - group_details
      - user_accounts
      - activity_log
      - error
      - notification
      - rabbitmq
    environment:
      dbURL: postgresql://default:vHFyts8wa4PK@ep-shiny-wave-a4w35od7-pooler.us-east-1.aws.neon.tech/verceldb
      rabbit_host: rabbitmq
      rabbit_port: 5672
      group_details_URL : http://group_details:5010/group_details
      user_accounts_URL : http://user_accounts:5000/user_accounts
      PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"


#######################################################
  # group_details: The group_details microservice
  #######################################################
  group_details:
    build:
      context: ./
      dockerfile: group_details.Dockerfile
    restart: always
    environment:
      dbURL: postgresql://default:vHFyts8wa4PK@ep-shiny-wave-a4w35od7-pooler.us-east-1.aws.neon.tech/verceldb
      PYTHONUNBUFFERED: 1
    ports:
      - "5010:5010"

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:15 # tested 20231101; Ref: https://docs.konghq.com/gateway/latest/support/third-party/
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong/kong-gateway:3.2.2.5 # tested 20231101
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong/kong-gateway:3.2.2.5 # tested 20231101
    platform: linux/amd64  # <- required for Mac M1 chip. Otherwise, can remove
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    depends_on:
      - kong-migration
    ports: # https://docs.konghq.com/gateway/latest/production/networking/default-ports/
      - "8000:8000" # Takes incoming HTTP traffic from Consumers, and forwards it to upstream Services.
      - "8443:8443" # Takes incoming HTTPS traffic from Consumers, and forwards it to upstream Services.
      - "8001:8001" # Admin API. Listens for calls from the command line over HTTP.
      - "8444:8444" # Admin API. Listens for calls from the command line over HTTPS.
      - "8002:8002" # Kong Manager (GUI). Listens for HTTP traffic.
      - "8445:8445" # Kong Manager (GUI). Listens for HTTPS traffic.
      - "8003:8003" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8446:8446" # Dev Portal. Listens for HTTP traffic, assuming Dev Portal is enabled.
      - "8004:8004" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.
      - "8447:8447" # Dev Portal /files traffic over HTTPS, assuming the Dev Portal is enabled.
